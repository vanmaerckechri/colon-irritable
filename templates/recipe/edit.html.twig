{% extends 'base.html.twig' %}

{% block title 'Liste les Recettes' %}

{% block body %}
	<h1>Editer une Recette</h1>
	{{ form_start(form) }}
		{{ form_row(form.titre) }}
		{{ form_row(form.type) }}
		{{ form_row(form.nbrPers) }}
		{{ form_row(form.tempsPrepa) }}
		{{ form_row(form.tempsCuisson) }}
		{{ form_row(form.image) }}
		<h3>Ingr√©dients</h3>
		<ul class="ingredients" data-prototype="{{ form_widget(form.ingredients.vars.prototype)|e('html_attr') }}">
			{% for ingredient in form.ingredients %}
		    	<li>{{ form_row(ingredient) }}</li>
		    {% endfor %}
		</ul>
		<H3>Etapes</H3>
		<ul class="etapes" data-prototype="{{ form_widget(form.etapes.vars.prototype)|e('html_attr') }}">
			{% for etape in form.etapes %}
		    	<li>{{ form_row(etape) }}</li>
		    {% endfor %}
		</ul>
		<button>Modifier</button>
	{{ form_end(form) }}
{% endblock %}


{% block javascripts %}
	<script type="text/javascript">
		window.addEventListener("DOMContentLoaded", (event) => {

			function updateLabels(typeName, collectionHolder)
			{
				let labels = collectionHolder.querySelectorAll('label');
				for (let i = labels.length - 1; i >= 0; i--)
				{
					labels[i].innerText = typeName + (i + 1);
				}
			}

			function deleteRow(collectionHolder, deleteBtn)
			{
				deleteBtn.parentNode.remove();
	   			// update index
		    	let index = parseInt(collectionHolder.getAttribute('data-index'));
	   			collectionHolder.setAttribute('data-index', index - 1);
			}

			let addDeleteBtn = function(typeName, collectionHolder, li)
			{
		   		let deleteBtn = document.createElement('button');
		   		deleteBtn.setAttribute('class', 'remove-' + typeName);
		   		deleteBtn.innerText = "X";
		   		li.append(deleteBtn);

		   		// delete row event
		   		deleteBtn.addEventListener('click', ()=> {
					deleteRow(collectionHolder, deleteBtn);
		   			updateLabels(typeName, collectionHolder);
		   		});
			}

			function addRow(typeName, collectionHolder, liBtn)
			{
			    // Get the data-prototype explained earlier
			    let prototype = collectionHolder.getAttribute('data-prototype');

			    // get the new index
			    let index = parseInt(collectionHolder.getAttribute('data-index'));
			    // Replace '$$name$$' in the prototype's HTML to
			    // instead be a number based on how many items we have
			    let newForm = prototype.replace(/__name__/g, index);
			    // increase the index with one for the next item
			    collectionHolder.setAttribute('data-index', index + 1);
			    
			    // Display the form in the page in an li, before the "Add a tag" link li
			    let newFormLi = document.createElement('li');
				newFormLi.innerHTML = newForm;

				let parent = liBtn.parentNode;
			    parent.insertBefore(newFormLi, liBtn);

				addDeleteBtn(typeName, collectionHolder, newFormLi);
			}

			function addCreateBtn(typeName, collectionHolder)
			{
			   	// create add element btn
				let liBtn = document.createElement('li');
				let addBtn = document.createElement('button');
				addBtn.setAttribute('class', 'add_' + typeName + '_link');
				addBtn.setAttribute('type', 'button')
				addBtn.innerText = '+ 1 ' + typeName;
				liBtn.appendChild(addBtn);

			    // add the "add element btn" to the current ul
			    collectionHolder.appendChild(liBtn);

			    updateLabels(typeName, collectionHolder);
			    
			    // add row event
			    addBtn.addEventListener('click', ()=> { 
			    	addRow(typeName, collectionHolder, liBtn);
			    	updateLabels(typeName, collectionHolder);
			    });
			}

			function init()
			{
				let typeNames = ['etape', 'ingredient'];

				for (let i = typeNames.length - 1; i >= 0; i--)
				{
					// category name
					let typeName = typeNames[i];
					let typeNamePlu = typeName + 's';

				    // Get the ul that holds the collection of tags
				   	let collectionHolder = document.querySelector('ul.' + typeNamePlu);

				    // update data-index of the current ul with input length
				    collectionHolder.setAttribute('data-index', collectionHolder.querySelectorAll('li').length);

				   	// Add a delete btn to elem who already exist
				   	let collection = document.querySelector('ul.' + typeNamePlu);
				   	let collectionOld = collection.querySelectorAll('li');
				   	for (let i = collectionOld.length - 1; i >= 0; i--)
				   	{
				   		let li = collectionOld[i];
				   		addDeleteBtn(typeName, collectionHolder, li);
				   	}

				   	addCreateBtn(typeName, collectionHolder)
				}
			}
			init();
		});
	</script>
{% endblock %}